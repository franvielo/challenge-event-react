{"ast":null,"code":"var _jsxFileName = \"/Users/franmelo/Documents/Production/quaddro-test/src/components/Events.tsx\";\nimport Item from './components/Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Events = _ref => {\n  let {\n    events\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hi \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), events === null || events === void 0 ? void 0 : events.map((event, index) => /*#__PURE__*/_jsxDEV(Item, {\n      id: id,\n      text: text,\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Item","Events","events","map","event","index","id","text","date"],"sources":["/Users/franmelo/Documents/Production/quaddro-test/src/components/Events.tsx"],"sourcesContent":["import Item from './components/Item';\nimport { Event } from '../models/event';\n\ninterface props {\n    events: Array<Event>\n}\n\nconst Events: React.FC<props> = ({events}) => {\n    return (\n        <>\n        <h1>hi </h1>\n        {events?.map((event, index) => (\n            <Item \n                id={id}\n                text={text}\n                date={date}\n            />  \n         ))}\n\n        </>\n    )\n}\n\n\nexport default Events"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,mBAAjB;;;;AAOA,MAAMC,MAAuB,GAAG,QAAc;EAAA,IAAb;IAACC;EAAD,CAAa;EAC1C,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,EAECA,MAFD,aAECA,MAFD,uBAECA,MAAM,CAAEC,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,IAAD;MACI,EAAE,EAAEC,EADR;MAEI,IAAI,EAAEC,IAFV;MAGI,IAAI,EAAEC;IAHV;MAAA;MAAA;MAAA;IAAA,QADH,CAFD;EAAA,gBADJ;AAaH,CAdD;;KAAMP,M;AAiBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}