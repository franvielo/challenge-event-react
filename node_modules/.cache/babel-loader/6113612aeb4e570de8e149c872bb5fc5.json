{"ast":null,"code":"var _jsxFileName = \"/Users/franmelo/Documents/Production/quaddro-test/src/components/Events.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n\nconst Events = _ref => {\n  let {\n    events\n  } = _ref;\n  //const { events } = propsType;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: events.map(event => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: event.text\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Events","events","map","event","text","id"],"sources":["/Users/franmelo/Documents/Production/quaddro-test/src/components/Events.tsx"],"sourcesContent":["interface event {\n    id: number;\n    text: string;\n    date: string;\n};\n  \ntype propsType = {\n    events: event;\n};\n\nconst Events = ({ events }:propsType) => {\n\n    //const { events } = propsType;\n    return (\n        <>\n            {events.map((event) => (\n                <h3 key={event.id}>{event.text}</h3>\n            ))}\n        </>\n    )\n}\n\nexport default Events"],"mappings":";;;AAIC;;AAMD,MAAMA,MAAM,GAAG,QAA0B;EAAA,IAAzB;IAAEC;EAAF,CAAyB;EAErC;EACA,oBACI;IAAA,UACKA,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACR;MAAA,UAAoBA,KAAK,CAACC;IAA1B,GAASD,KAAK,CAACE,EAAf;MAAA;MAAA;MAAA;IAAA,QADH;EADL,iBADJ;AAOH,CAVD;;KAAML,M;AAYN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}